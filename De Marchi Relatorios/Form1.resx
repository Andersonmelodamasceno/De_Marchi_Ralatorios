<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="sfButton1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        F8yZ8z9ph1wTwXLGYgAAAABJRU5ErkJggg==
</value>
  </data>
</root>